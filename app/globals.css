@import url('https://fonts.googleapis.com/css2?family=VT323&family=Press+Start+2P&display=swap');
@import "tailwindcss";

:root {
  --background: #0a0a0a;
  --foreground: #00ffff;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: 'VT323', monospace;
  font-size: 1.5rem;
  letter-spacing: 0.05em;
}

h1, h2, h3, h4, h5, h6 {
  font-family: 'Press Start 2P', monospace;
  letter-spacing: 0.1em;
}

/* CRT Screen Effect */
.crt-screen {
  position: relative;
  background: 
    radial-gradient(ellipse at top, rgba(185, 25, 255, 0.08) 0%, transparent 50%),
    radial-gradient(ellipse at bottom, rgba(0, 217, 255, 0.08) 0%, transparent 50%),
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent 2px,
      rgba(0, 255, 255, 0.03) 2px,
      rgba(0, 255, 255, 0.03) 4px
    ),
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      rgba(255, 0, 255, 0.03) 2px,
      rgba(255, 0, 255, 0.03) 4px
    ),
    linear-gradient(to bottom, #0a0a0a 0%, #0f0514 25%, #0a0a0a 50%, #050514 75%, #0a0a0a 100%);
  background-size: 
    100% 100%,
    100% 100%,
    100px 100px,
    100px 100px,
    100% 100%;
  overflow-x: hidden;
  overflow-y: auto;
}

.crt-screen::before {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    0deg,
    rgba(0, 0, 0, 0.15),
    rgba(0, 0, 0, 0.15) 1px,
    transparent 1px,
    transparent 2px
  );
  pointer-events: none;
  z-index: 50;
}

.crt-screen::after {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent 50%,
    rgba(0, 255, 255, 0.02) 51%
  );
  background-size: 100% 4px;
  pointer-events: none;
  animation: scan 8s linear infinite;
  z-index: 50;
}

/* Scanline effect */
.scanlines {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    0deg,
    rgba(0, 255, 255, 0.03) 0px,
    transparent 1px,
    transparent 2px,
    rgba(0, 255, 255, 0.03) 3px
  );
  pointer-events: none;
  z-index: 49;
}

/* Glow effects */
.neon-glow {
  text-shadow: 
    0 0 5px currentColor,
    0 0 10px currentColor,
    0 0 20px currentColor,
    0 0 40px currentColor;
}

.neon-glow-pink {
  color: #ff00ff;
  text-shadow: 
    0 0 5px #ff00ff,
    0 0 10px #ff00ff,
    0 0 20px #ff00ff,
    0 0 40px #ff00ff;
}

.neon-glow-cyan {
  color: #00ffff;
  text-shadow: 
    0 0 5px #00ffff,
    0 0 10px #00ffff,
    0 0 20px #00ffff,
    0 0 40px #00ffff;
}

.neon-border {
  border: 2px solid #00ffff;
  box-shadow: 
    0 0 5px #00ffff,
    inset 0 0 5px #00ffff,
    0 0 10px #00ffff,
    inset 0 0 10px #00ffff;
}

.neon-border-pink {
  border: 2px solid #ff00ff;
  box-shadow: 
    0 0 5px #ff00ff,
    inset 0 0 5px #ff00ff,
    0 0 10px #ff00ff,
    inset 0 0 10px #ff00ff;
}

/* CRT Monitor Effect with Wobble and Glitches */
.glitch {
  position: relative;
  display: inline-block;
  animation: crt-flicker 0.15s infinite alternate;
  filter: contrast(1.1) brightness(1.05);
}

/* Phosphor bloom glow */
.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  text-shadow: 
    -2px 0 #ff00ff,
    2px 0 #00ffff,
    0 0 20px rgba(0, 255, 255, 0.5),
    0 0 40px rgba(255, 0, 255, 0.3);
  animation: rgb-split 4s steps(1) infinite;
  opacity: 0.8;
}

/* Horizontal tear/displacement */
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  text-shadow: 
    -3px 0 #00ffff,
    3px 0 #ff00ff;
  animation: horizontal-tear 3s steps(5) infinite;
  clip: rect(0, 0, 0, 0);
}

/* Slow horizontal wobble */
@keyframes crt-wobble {
  0%, 100% {
    transform: translateX(0px);
  }
  10% {
    transform: translateX(6px);
  }
  20% {
    transform: translateX(-4px);
  }
  30% {
    transform: translateX(8px);
  }
  40% {
    transform: translateX(-6px);
  }
  50% {
    transform: translateX(5px);
  }
  60% {
    transform: translateX(-7px);
  }
  70% {
    transform: translateX(4px);
  }
  80% {
    transform: translateX(-5px);
  }
  90% {
    transform: translateX(6px);
  }
}

/* Subtle flicker */
@keyframes crt-flicker {
  0% {
    opacity: 0.98;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.96;
  }
}

/* RGB channel split */
@keyframes rgb-split {
  0%, 80%, 100% {
    transform: translateX(0);
    opacity: 0.8;
  }
  81% {
    transform: translateX(-3px);
    opacity: 0.9;
  }
  82% {
    transform: translateX(4px);
    opacity: 0.85;
  }
  83% {
    transform: translateX(-2px);
    opacity: 0.8;
  }
  84% {
    transform: translateX(0);
    opacity: 0.8;
  }
}

/* Horizontal displacement tears */
@keyframes horizontal-tear {
  0%, 85%, 100% {
    clip: rect(0, 0, 0, 0);
    transform: translateX(0);
  }
  86% {
    clip: rect(30px, 9999px, 35px, 0);
    transform: translateX(20px);
  }
  87% {
    clip: rect(60px, 9999px, 65px, 0);
    transform: translateX(-15px);
  }
  88% {
    clip: rect(45px, 9999px, 50px, 0);
    transform: translateX(10px);
  }
  89% {
    clip: rect(0, 0, 0, 0);
    transform: translateX(0);
  }
}

/* Analog noise overlay (use sparingly) */
.glitch-noise {
  position: relative;
}

.glitch-noise::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    repeating-linear-gradient(
      0deg,
      transparent 0px,
      rgba(255, 255, 255, 0.03) 1px,
      transparent 2px
    );
  animation: noise 0.2s infinite;
  pointer-events: none;
  opacity: 0.4;
}

@keyframes noise {
  0%, 100% {
    transform: translateY(0);
  }
  10% {
    transform: translateY(-5%);
  }
  20% {
    transform: translateY(-10%);
  }
  30% {
    transform: translateY(-15%);
  }
  40% {
    transform: translateY(-20%);
  }
  50% {
    transform: translateY(-25%);
  }
  60% {
    transform: translateY(-30%);
  }
  70% {
    transform: translateY(-35%);
  }
  80% {
    transform: translateY(-40%);
  }
  90% {
    transform: translateY(-45%);
  }
}

/* Terminal cursor */
.cursor::after {
  content: "â–Š";
  animation: blink 1s infinite;
}

@keyframes blink {
  0%, 49% {
    opacity: 1;
  }
  50%, 100% {
    opacity: 0;
  }
}

/* Retro card */
.retro-card {
  background: rgba(26, 26, 26, 0.8);
  border: 2px solid rgba(0, 255, 255, 0.5);
  padding: 1.5rem;
  position: relative;
  backdrop-filter: blur(10px);
  transition: all 0.3s ease;
}

.retro-card:hover {
  border-color: #ff00ff;
  box-shadow: 0 0 20px rgba(255, 0, 255, 0.5);
  transform: translateY(-5px);
}

/* Retro button */
.retro-button {
  padding: 0.75rem 1.5rem;
  border: 2px solid #00ffff;
  background: transparent;
  color: #00ffff;
  font-family: 'Press Start 2P', monospace;
  font-size: 0.75rem;
  transition: all 0.3s ease;
  box-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
  cursor: pointer;
}

.retro-button:hover {
  background: #00ffff;
  color: #0a0a0a;
  box-shadow: 0 0 20px rgba(0, 255, 255, 0.8);
}

/* Grid background */
.grid-bg {
  background-image: 
    linear-gradient(rgba(0, 255, 255, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 255, 0.1) 1px, transparent 1px);
  background-size: 50px 50px;
}

/* VHS tracking lines */
.vhs-lines {
  position: relative;
}

.vhs-lines::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    0deg,
    transparent,
    transparent 2px,
    rgba(255, 0, 255, 0.05) 2px,
    rgba(255, 0, 255, 0.05) 4px
  );
  pointer-events: none;
}

@keyframes scan {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

/* Retro geometric background elements */
.retro-bg-shapes {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
  overflow: hidden;
}

.retro-bg-shapes::before {
  content: "";
  position: absolute;
  top: 10%;
  right: 10%;
  width: 300px;
  height: 300px;
  border: 2px solid rgba(0, 255, 255, 0.1);
  border-radius: 50%;
  animation: float 20s ease-in-out infinite;
}

.retro-bg-shapes::after {
  content: "";
  position: absolute;
  bottom: 15%;
  left: 5%;
  width: 200px;
  height: 200px;
  border: 2px solid rgba(255, 0, 255, 0.1);
  transform: rotate(45deg);
  animation: float-reverse 15s ease-in-out infinite;
}

/* Additional floating shapes */
.shape-1 {
  position: absolute;
  top: 30%;
  left: 15%;
  width: 150px;
  height: 150px;
  border: 2px solid rgba(185, 25, 255, 0.08);
  border-radius: 50%;
  animation: float-slow 25s ease-in-out infinite;
}

.shape-2 {
  position: absolute;
  top: 60%;
  right: 20%;
  width: 180px;
  height: 180px;
  border: 2px solid rgba(0, 217, 255, 0.1);
  transform: rotate(30deg);
  animation: float-reverse 18s ease-in-out infinite 2s;
}

.shape-3 {
  position: absolute;
  top: 45%;
  left: 50%;
  width: 100px;
  height: 100px;
  border: 2px solid rgba(255, 0, 255, 0.06);
  border-radius: 50%;
  animation: float 22s ease-in-out infinite 5s;
}

.shape-4 {
  position: absolute;
  top: 20%;
  left: 30%;
  width: 120px;
  height: 120px;
  border: 2px solid rgba(0, 255, 255, 0.07);
  transform: rotate(15deg);
  animation: float-slow 28s ease-in-out infinite 3s;
}

.shape-5 {
  position: absolute;
  bottom: 30%;
  right: 8%;
  width: 140px;
  height: 140px;
  border: 2px solid rgba(185, 25, 255, 0.09);
  border-radius: 50%;
  animation: float-reverse 19s ease-in-out infinite 4s;
}

.shape-6 {
  position: absolute;
  bottom: 40%;
  left: 25%;
  width: 90px;
  height: 90px;
  border: 2px solid rgba(0, 217, 255, 0.08);
  transform: rotate(60deg);
  animation: float 24s ease-in-out infinite 1s;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0) translateX(0);
  }
  25% {
    transform: translateY(-20px) translateX(10px);
  }
  50% {
    transform: translateY(-40px) translateX(-10px);
  }
  75% {
    transform: translateY(-20px) translateX(5px);
  }
}

@keyframes float-reverse {
  0%, 100% {
    transform: rotate(45deg) translateY(0) translateX(0);
  }
  25% {
    transform: rotate(45deg) translateY(20px) translateX(-10px);
  }
  50% {
    transform: rotate(45deg) translateY(40px) translateX(10px);
  }
  75% {
    transform: rotate(45deg) translateY(20px) translateX(-5px);
  }
}

@keyframes float-slow {
  0%, 100% {
    transform: translateY(0) translateX(0) rotate(0deg);
  }
  25% {
    transform: translateY(-30px) translateX(15px) rotate(5deg);
  }
  50% {
    transform: translateY(-60px) translateX(-15px) rotate(-5deg);
  }
  75% {
    transform: translateY(-30px) translateX(10px) rotate(3deg);
  }
}

/* Retro Game Progress Bar Effect */
.cylon-scan {
  position: relative;
  display: inline-block;
  padding-bottom: 8px;
}

/* Progress bar background track */
.cylon-scan::before {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background: rgba(0, 255, 255, 0.2);
  border-radius: 1px;
}

/* Progress bar fill - classic retro game style */
.cylon-scan::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  height: 2px;
  width: 0%;
  background: linear-gradient(
    90deg,
    #ff00ff 0%,
    #ff00ff 50%,
    #00ffff 100%
  );
  border-radius: 1px;
  box-shadow: 
    0 0 4px rgba(255, 0, 255, 0.6),
    0 0 8px rgba(0, 255, 255, 0.4);
  animation: retro-progress 4s ease-in-out infinite;
}

@keyframes retro-progress {
  0% {
    width: 0%;
    opacity: 0.8;
  }
  50% {
    width: 100%;
    opacity: 1;
  }
  100% {
    width: 100%;
    opacity: 0;
  }
}
